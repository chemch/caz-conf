name: Deploy All Services

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (dev, qa, uat, prod)'
        required: true
      tag:
        description: 'Docker image tag (e.g., latest or commit SHA)'
        required: false

jobs:
  deploy:
    name: Deploy ${{ matrix.service }} to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [detection-svc]

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
      TAG: ${{ github.event.inputs.tag || 'latest' }}
      SERVICE_NAME: ${{ matrix.service }}
      ENVIRONMENT: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout caz-conf repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region "$AWS_REGION" \
            --name "$EKS_CLUSTER_NAME"

      - name: Install Argo Rollouts CLI
        run: |
          curl -sLO https://github.com/argoproj/argo-rollouts/releases/latest/download/kubectl-argo-rollouts-linux-amd64
          chmod +x kubectl-argo-rollouts-linux-amd64
          sudo mv kubectl-argo-rollouts-linux-amd64 /usr/local/bin/kubectl-argo-rollouts

      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh

      - name: Set deployment image tag
        run: |
          : "${TAG:=latest}"
          echo "Using image tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Update image in overlay
        run: ./scripts/set-image.sh "$SERVICE_NAME" "$TAG"

      - name: Deploy service
        run: ./scripts/start-service.sh "$SERVICE_NAME" "$ENVIRONMENT"

      - name: Wait for rollout
        run: |
          echo "Waiting for rollout to complete..."
          for i in {1..12}; do
            if kubectl get rollout "$SERVICE_NAME" -n "$SERVICE_NAME-$ENVIRONMENT" &>/dev/null; then
              break
            fi
            echo "Waiting for rollout $SERVICE_NAME to appear..."
            sleep 5
          done
          
          kubectl-argo-rollouts get rollout "$SERVICE_NAME" -n "$SERVICE_NAME-$ENVIRONMENT" --watch

      - name: Print rollout status
        run: |
          kubectl-argo-rollouts status rollout "$SERVICE_NAME" -n "$SERVICE_NAME-$ENVIRONMENT"